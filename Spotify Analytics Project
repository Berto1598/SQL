# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

# First I checked the data and what was in it.

select * from BIT_DB.Spotifydata;

# Then I selected how many tracks and artist is in the data.

SELECT count(*) 
from BIT_DB.spotifydata;

# Then I determined who the Top 10 artists are by popularity

select track_name, artist_name, populaity
from BIT_DB.spotifydata
order by popularity
limit 10;

# Then I checked which top 10 song where danceable.

select track_name, artist_name, danceability
from BIT_DB.spotifydata
order by danceability desc
limit 10;

# What are the top 10 longest song?

select track_name, artist_name , duration_ms
from BIT_DB.spotifydata
order by duration_ms desc
limit 10;

# What are the top 10 artist?

SELECT artist_name
FROM BIT_DB.spotifydata
ORDER BY artist_name desc
LIMIT 10;

# What is the avg popularity, danceability, and energy by artist and track?

SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;
